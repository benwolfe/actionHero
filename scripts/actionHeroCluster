#!/usr/bin/env node

var cluster = require('cluster');
var numCPUs = require('os').cpus().length;

// load in the actionHero class
var actionHero = require(__dirname + "/api.js").actionHero; // normally if installed by npm: var actionHero = require("actionHero").actionHero;

if (cluster.isMaster) {
	// Fork workers.
	for (var i = 0; i < numCPUs; i++) {
		cluster.fork();
	}
	cluster.on('death', function(worker) {
		console.log('worker ' + worker.pid + ' died');
	});
}else{
	var params = {};

	// any additional functions you might wish to define to be globally accessable can be added as part of params.initFunction.  The api object will be availalbe.
	params.initFunction = function(api, next){
		next();
	}

	// if there is no config.js file in the application's root, then actionHero will load in a collection of default params.  You can overwrite them with params.configChanges
	params.configChanges = {
		general: {
			flatFileDirectory: "./public/"
		}
	}

  	// start the server!
	actionHero.start(params, function(api){
		api.log("Boot Sucessful!");
	});

}